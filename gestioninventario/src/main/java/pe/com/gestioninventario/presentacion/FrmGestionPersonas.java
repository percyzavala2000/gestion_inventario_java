/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package pe.com.gestioninventario.presentacion;

import javax.swing.JOptionPane;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import pe.com.gestioninventario.basedatos.PersonaDAO;
import pe.com.gestioninventario.entidades.Persona;
import java.sql.Date;

/**
 *
 * @author pz
 */
public class FrmGestionPersonas extends javax.swing.JInternalFrame {

  /**
   * Creates new form FrmGestionPersonas
   */
  public FrmGestionPersonas() {
    initComponents();
    this.setSize(1020, 540);
    this.setTitle("Gestión de Personas");
    cargarTabla();

  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_personas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_apellido_paterno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_apellido_materno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_DNI = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btn_Guardar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        jLabel_wallpaper_gestion_personas = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Personas");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        tabla_personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Persona", "Dni", "Telefono", "correo", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_personas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_personasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_personas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 630, 390));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 230, -1));

        jLabel3.setText("Apellido Paterno:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));
        jPanel1.add(txt_apellido_paterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 230, -1));

        jLabel4.setText("Apellido Materno:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jPanel1.add(txt_apellido_materno, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 230, -1));

        jLabel5.setText("DNI:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));
        jPanel1.add(txt_DNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 230, -1));

        jLabel6.setText("Telefono:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));
        jPanel1.add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 230, -1));

        jLabel7.setText("Correo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));
        jPanel1.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 230, -1));

        jLabel8.setText("Dirección");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));
        jPanel1.add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 230, -1));

        jLabel9.setText("Estado:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        btn_Guardar.setText("Guardar");
        btn_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, -1, -1));

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, -1, -1));

        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Habilitado", "Deshabilitado" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 230, 30));

        jLabel10.setText("ID");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        txt_id.setEditable(false);
        txt_id.setBackground(new java.awt.Color(242, 242, 242));
      
        jPanel1.add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 230, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, 360, 380));

        jLabel_wallpaper_gestion_personas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/com/gestioninventario/imagenes/fondomediano4.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper_gestion_personas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GuardarActionPerformed
      
     
        // 1. Recuperar los datos de la interfaz
        String nombres = txt_nombre.getText().trim();
        String apellidoPaterno = txt_apellido_paterno.getText().trim();
        String apellidoMaterno = txt_apellido_materno.getText().trim();
        int dni = Integer.parseInt(txt_DNI.getText().trim());
        String telefono = txt_telefono.getText().trim();
        String correo = txt_correo.getText().trim();
        String direccion = txt_direccion.getText().trim();
        String estado = jComboBox1.getSelectedItem().toString();
        // 2. Validar que los datos no esten vacios
        if (nombres.isEmpty() || apellidoPaterno.isEmpty() || apellidoMaterno.isEmpty() || dni == 0
            || telefono.isEmpty() || correo.isEmpty() || direccion.isEmpty()) {
          JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios");
        } else {
          // 3. Crear un objeto de tipo persona
          Persona persona = new Persona();
          persona.setNombres(nombres);
          persona.setApellidoPaterno(apellidoPaterno);
          persona.setApellidoMaterno(apellidoMaterno);
          persona.setDni(dni);
          persona.setTelefono(telefono);
          persona.setCorreo(correo);
          persona.setDireccion(direccion);
          persona.setEstado(estado);
          // 4. Guardar la persona en la base de datos
          PersonaDAO personaDAO = new PersonaDAO();
          try {
            personaDAO.insertarPersona(persona);
            JOptionPane.showMessageDialog(null, "Persona guardada correctamente");
            cargarTabla();
            limpiar();
            txt_id.setEditable(false);

          } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al guardar la persona");
          }
        }
        
        
    }//GEN-LAST:event_btn_GuardarActionPerformed

    private void tabla_personasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_personasMouseClicked
        // 1. Obtener la fila seleccionada
        PersonaDAO personaDAO = new PersonaDAO();
        int fila = tabla_personas.getSelectedRow();
        // 2. Obtener el id de la persona seleccionada
        int idPersona = Integer.parseInt(tabla_personas.getValueAt(fila, 0).toString());
        // 3. Buscar la persona en la base de datos
        Persona persona = new Persona(idPersona);


        txt_id.setEditable(false);
        

        try {
          persona = personaDAO.buscarPersona(persona);
         
          // 4. Mostrar los datos de la persona en la interfaz
          txt_id.setText(persona.getId() + "");
          txt_nombre.setText(persona.getNombres());
          txt_apellido_paterno.setText(persona.getApellidoPaterno());
          txt_apellido_materno.setText(persona.getApellidoMaterno());
          txt_DNI.setText(persona.getDni()+ "");
          txt_telefono.setText(persona.getTelefono());
          txt_correo.setText(persona.getCorreo());
          txt_direccion.setText(persona.getDireccion());
          jComboBox1.setSelectedItem(persona.getEstado());
          // 5. Cambiar el estado de la botonera
          estadosBotonera("modificar");
          txt_id.setEditable(false);
          
        } catch (Exception e) {
          e.printStackTrace();
          JOptionPane.showMessageDialog(null, "Error al buscar la persona");
        }
        
    }//GEN-LAST:event_tabla_personasMouseClicked

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
       //eliminar persona
       //validar campo id
        if(txt_id.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "El campo id esta vacio");
        }else{
          //recuperar id
          int id = Integer.parseInt(txt_id.getText());
          System.out.println(" cual es  aqui en eliminar id: " + id);
          //crear objeto persona
          Persona persona = new Persona(id);
          //eliminar persona
          PersonaDAO personaDAO = new PersonaDAO();
          try {
            personaDAO.eliminarPersona(persona);
            JOptionPane.showMessageDialog(null, "Persona eliminada correctamente");
            cargarTabla();
            limpiar();
          } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al eliminar la persona");


          }
        }





       
        
    }//GEN-LAST:event_btn_eliminarActionPerformed

   
    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        //actualizar persona
        //validar campo id
        if(txt_id.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "El campo id esta vacio");
        }else{
          //recuperar id
          int id = Integer.parseInt(txt_id.getText());
          //recuperar datos de la interfaz
          String nombres = txt_nombre.getText().trim();
          String apellidoPaterno = txt_apellido_paterno.getText().trim();
          String apellidoMaterno = txt_apellido_materno.getText().trim();
          int dni = Integer.parseInt(txt_DNI.getText().trim());
          String telefono = txt_telefono.getText().trim();
          String correo = txt_correo.getText().trim();
          String direccion = txt_direccion.getText().trim();
          String estado = jComboBox1.getSelectedItem().toString();
          Date fechaModificacion = new Date(System.currentTimeMillis());
          //validar campos vacios
          if (nombres.isEmpty() || apellidoPaterno.isEmpty() || apellidoMaterno.isEmpty() || dni == 0
            || telefono.isEmpty() || correo.isEmpty() || direccion.isEmpty()) {
          JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios");
        } else {
          //crear objeto persona
          Persona persona = new Persona(id, nombres, apellidoPaterno, apellidoMaterno, dni, telefono, correo, direccion, estado, fechaModificacion);
          //actualizar persona
          PersonaDAO personaDAO = new PersonaDAO();
          try {
            personaDAO.actualizarPersona(persona);
            JOptionPane.showMessageDialog(null, "Persona actualizada correctamente");
            cargarTabla();
            limpiar();
            txt_id.setEditable(false);
          } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al actualizar la persona");
          }
        }
        }

        
        
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        limpiar();

        
        
    }//GEN-LAST:event_btn_limpiarActionPerformed

  // cargar tabla
  private void cargarTabla() {
    DefaultTableModel modeloTabla = (DefaultTableModel) tabla_personas.getModel();
    modeloTabla.setRowCount(0);
    PersonaDAO personaDAO = new PersonaDAO();
    try {
      List<Persona> personas = personaDAO.mostrarPersona();
      for (Persona persona : personas) {
        Object[] fila = { persona.getId(),
            persona.getNombres() + " " + persona.getApellidoPaterno() + " " + persona.getApellidoMaterno(),
            persona.getDni(), persona.getTelefono(), persona.getCorreo(), persona.getEstado() };
        modeloTabla.addRow(fila);
        txt_id.setEditable(false);
      }
    } catch (Exception e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(null, "Error al cargar la tabla de personas");
    }

  }
  
  
//metodo limpiar
  private void limpiar() {
    txt_id.setText("");
    txt_nombre.setText("");
    txt_apellido_paterno.setText("");
    txt_apellido_materno.setText("");
    txt_DNI.setText("");
    txt_telefono.setText("");
    txt_correo.setText("");
    txt_direccion.setText("");
    jComboBox1.setSelectedIndex(0);
  }

  // metodo de estadosbotonera
  private void estadosBotonera(String estado) {


  }
  
   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Guardar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_wallpaper_gestion_personas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_personas;
    private javax.swing.JTextField txt_DNI;
    private javax.swing.JTextField txt_apellido_materno;
    private javax.swing.JTextField txt_apellido_paterno;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
